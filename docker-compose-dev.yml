# 构建docker-compose项目
# docker-compose up
# docker-compose up -V --force-recreate
# docker-compose up -d --force-recreate
version: '3'
services:
  jvue-nginx:
    privileged: true
    image: jvue/nginx:1.15.9
    container_name: jvue-nginx
    build:
      context: ./
      dockerfile: ./jvue-nginx/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./jvue-nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data/nginx/log:/var/log/nginx
  jvue-mysql:
    privileged: true
    image: jvue/mysql:5.7.24
    container_name: jvue-mysql
    build:
      context: ./
      dockerfile: ./jvue-mysql/Dockerfile
    ports:
      - "3306:3306"
    environment:
      # 最好使用此设定时区，其它静像也可以使用,也可以用"TZ=Asia/Shanghai"
      - "TZ=CST-8"
      - "MYSQL_ROOT_PASSWORD=123456"
      - "MYSQL_ROOT_HOST=%"
      - "MYSQL_DATABASE=testbugucms"
      - "MYSQL_USER=test"
      - "MYSQL_PASSWORD=123456"
    volumes:
      - ./data/mysql/db:/var/db
      - ./data/mysql/log:/var/log
      - ./jvue-mysql/my.cnf:/etc/my.cnf
      - ./jvue-mysql/init:/docker-entrypoint-initdb.d/
    restart: always
  jvue-server:
    privileged: true
    image: jvue/server:4.0.0
    container_name: jvue-server
    build:
      context: ./
      dockerfile: ./jvue-server/Dockerfile
    ports:
      - "8081:8081"
    working_dir: /app
    command: mvn clean spring-boot:run -Dspring-boot.run.profiles=docker -DskipTests
    volumes:
      - ./jvue-server:/app
      - ./data/maven/.m2:/root/.m2
      - ./data/server/logs:/logs
    restart: always
  jvue-front:
    privileged: true
    container_name: jvue-front
    image: jvue-front:4.0.0
    build:
      context: .
      dockerfile: ./jvue-front/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - npm_config_unsafe_perm=true
    # 这里的命令优先级比较高，会自动覆盖镜像里面的命令
    command: npm run serve
    restart: always
  jvue-admin:
    privileged: true
    container_name: jvue-admin
    image: jvue-admin:4.0.0
    build:
      context: .
      dockerfile: ./jvue-admin/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - npm_config_unsafe_perm=true
    # 这里的命令优先级比较高，会自动覆盖镜像里面的命令
    command: npm run serve
    restart: always