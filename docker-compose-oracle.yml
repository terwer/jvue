# 构建docker-compose项目
# docker-compose --log-level INFO build
# docker-compose --log-level INFO build jvue-front

# 重启并清理以及重建容器
# docker-compose --log-level INFO up --force-recreate --remove-orphans
# docker-compose --log-level INFO up --force-recreate jvue-front

# 重启并重建镜像
# docker-compose --log-level INFO up --build --force-recreate --remove-orphans
# docker-compose --log-level INFO up --build --force-recreate jvue-front

# 启动守护线程
# docker-compose --log-level INFO up -d

# 重启并重建镜像启动守护线程
# docker-compose --log-level INFO up -d --build --force-recreate jvue-front

# oracle doc
# DB_SID
# This parameter changes the ORACLE_SID of the database. The default value is set to ORCLCDB.
# To connect from outside the container using SQL*Plus,
# $ sqlplus sys/Oradoc_db1@ORCLCDB as sysdba
# Changing default password for SYS user
# alter user sys identified by <new-password>;
# The database alert log can be viewed with
# $ docker logs <Oracle-DB>

version: '3'
services:
  jvue-nginx:
    image: jvue/nginx:1.15.9
    container_name: jvue-nginx
    build:
      context: ./
      dockerfile: ./jvue-nginx/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./jvue-nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data/nginx/log:/var/log/nginx
    restart: always
  jvue-oracle:
    image: jvue/oracle:oracle-xe-11g
    container_name: jvue-oracle
    build:
      context: ./
      dockerfile: ./jvue-oracle/Dockerfile
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - ./data/oracle:/u01/app/oracle
    restart: always
  jvue-server:
    image: jvue/server:4.0.0
    container_name: jvue-server
    build:
      context: ./
      dockerfile: ./jvue-server/Dockerfile
    ports:
      - "8081:8081"
    working_dir: /app
    command: mvn clean spring-boot:run -Dspring-boot.run.profiles=docker -DskipTests
    volumes:
      - ./jvue-server:/app
      - ./data/maven/.m2:/root/.m2
      - ./data/server/logs:/logs
    restart: always
  jvue-front:
    container_name: jvue-front
    image: jvue/front:4.0.0
    build:
      context: .
      dockerfile: ./jvue-front/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - npm_config_unsafe_perm=true
    restart: always
  jvue-admin:
    container_name: jvue-admin
    image: jvue/admin:4.0.0
    build:
      context: .
      dockerfile: ./jvue-admin/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - npm_config_unsafe_perm=true
    restart: always